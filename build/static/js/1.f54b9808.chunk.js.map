{"version":3,"sources":["lib/flex/styles/index.js","lib/flex/index.js","lib/flex-item/styles/index.js","lib/flex-item/index.js","views/home/styles/index.js","views/home/index.js"],"names":["StyledFlex","styled","div","attrs","className","props","alignItems","Flex","React","createElement","StyledFlexItem","flex","FlexItem","StyledHome","theme","lightColor","scpx","generalColor8","list","title","id","path","Home","handleClickItem","item","history","push","this","map","index","key","onClick","Component","defaultProps"],"mappings":"8OAEO,IAAMA,E,KAAaC,EAAOC,IAAIC,OAAM,iBAAO,CAChDC,UAAW,UADaH,CAAH,KAInB,SAAAI,GAAK,OAAIA,EAAMC,WAAN,uBAAmCD,EAAMC,YAAe,MCNrE,kCAGO,IAAMC,EAAO,SAACF,GACnB,OAAOG,IAAMC,cAAcT,EAAYK,K,yICFlC,IAAMK,E,KAAiBT,EAAOC,IAAIC,OAAM,iBAAO,CACpDC,UAAW,eADiBH,CAAH,KAGvB,SAAAI,GAAK,OAAIA,EAAMM,MAAQ,EAAd,gBAA2BN,EAAMM,KAAjC,KAA2C,MCLxD,kCAGO,IAAMC,EAAW,SAACP,GACvB,OAAOG,IAAMC,cAAcC,EAAgBL,K,2VCF7C,IAaeQ,E,KAbIZ,EAAOC,IAAV,KACM,SAAAG,GAAK,OAAIA,EAAMS,MAAMC,cAG5B,SAAAV,GAAK,OAAIA,EAAMS,MAAME,KAAK,OAAO,SAAAX,GAAK,OAAIA,EAAMS,MAAME,KAAK,OAIhD,SAAAX,GAAK,OAAIA,EAAMS,MAAMG,iB,gBCHzCC,EAAO,CACX,CACEC,MAAO,iCACPC,GAAI,SACJC,KAAM,WAER,CACEF,MAAO,iCACPC,GAAI,SACJC,KAAM,WAER,CACEF,MAAO,wCACPC,GAAI,UACJC,KAAM,aAIJC,E,YACJ,aAAgB,IAAD,8BACb,+CA+BFC,gBAAkB,SAACC,GACjB,EAAKnB,MAAMoB,QAAQC,KAAKF,EAAKH,OA/B7B,EAAKH,KAAOA,EAFC,E,sEAKJ,IAAD,OACR,OACE,kBAAC,EAAD,KAEIS,KAAKT,KAAKU,KAAI,SAACJ,EAAMK,GACnB,OACE,kBAAC,IAAD,CACEC,IAAKN,EAAKJ,GACVW,QAAS,kBAAM,EAAKR,gBAAgBC,IACpCpB,UAAqB,IAAVyB,EAAc,GAAK,4BAE9B,kBAAC,IAAD,CAAUlB,KAAM,GACd,4BAAKa,EAAKL,QAEZ,kBAAC,IAAD,KACE,2BACE,uBAAGf,UAAU,6C,GAtBd4B,aAsCnBV,EAAKW,aAAe,GAMLX","file":"static/js/1.f54b9808.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StyledFlex = styled.div.attrs(() => ({\n  className: 'flex',\n}))`\n  display: flex;\n  ${props => props.alignItems ? `align-items: ${props.alignItems}` : ''}\n`;\n","import React from 'react';\nimport { StyledFlex } from './styles';\n\nexport const Flex = (props) => {\n  return React.createElement(StyledFlex, props);\n};\n\nexport default Flex;\n","import styled from 'styled-components';\n\nexport const StyledFlexItem = styled.div.attrs(() => ({\n  className: 'flex-item',\n}))`\n  ${props => props.flex >= 0 ? `flex: ${props.flex};` : ''}\n`;\n","import React from 'react';\nimport { StyledFlexItem } from './styles';\n\nexport const FlexItem = (props) => {\n  return React.createElement(StyledFlexItem, props);\n};\n\nexport default FlexItem;\n","import styled from 'styled-components';\n\nconst StyledHome = styled.div`\n  background-color: ${props => props.theme.lightColor};\n\n  .flex {\n    padding: ${props => props.theme.scpx(10)} ${props => props.theme.scpx(15)};\n    transition: background-color linear 300ms;\n\n    &:active {\n      background-color: ${props => props.theme.generalColor8};\n    }\n  }\n`;\n\nexport default StyledHome;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport StyledHome from './styles';\nimport { Flex } from '../../lib/flex';\nimport { FlexItem } from '../../lib/flex-item';\n\nconst list = [\n  {\n    title: 'Button（按钮）',\n    id: 'button',\n    path: '/button',\n  },\n  {\n    title: 'Ripple（涟漪）',\n    id: 'ripple',\n    path: '/ripple',\n  },\n  {\n    title: 'Spinner（旋转器）',\n    id: 'spinner',\n    path: '/spinner',\n  },\n];\n\nclass Home extends Component {\n  constructor () {\n    super();\n    this.list = list;\n  }\n\n  render () {\n    return (\n      <StyledHome>\n        {\n          this.list.map((item, index) => {\n            return (\n              <Flex\n                key={item.id}\n                onClick={() => this.handleClickItem(item)}\n                className={index === 0 ? '' : 'halfpx-border border-top'}\n              >\n                <FlexItem flex={1}>\n                  <h4>{item.title}</h4>\n                </FlexItem>\n                <FlexItem>\n                  <p>\n                    <i className='iconfont iconfont-arrow-right' />\n                  </p>\n                </FlexItem>\n              </Flex>\n            );\n          })\n        }\n      </StyledHome>\n    );\n  }\n\n  handleClickItem = (item) => {\n    this.props.history.push(item.path);\n  }\n};\n\nHome.defaultProps = {};\n\nHome.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default Home;\n"],"sourceRoot":""}